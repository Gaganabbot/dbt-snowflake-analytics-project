name: CI - dbt Tests and Validation

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'models/**'
      - 'macros/**'
      - 'tests/**'
      - 'dbt_project.yml'
      - 'packages.yml'
  workflow_dispatch:

env:
  DBT_PROFILES_DIR: ${{ github.workspace }}
  SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
  SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
  SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
  SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
  SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
  SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
  SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
  GITHUB_PR_NUMBER: ${{ github.event.number }}

jobs:
  dbt-ci:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dbt-snowflake==1.7.0
        pip install sqlfluff==2.3.5

    - name: Create CI profiles.yml
      run: |
        mkdir -p ~/.dbt
        cat > ~/.dbt/profiles.yml << EOF
        modern_analytics:
          target: ci
          outputs:
            ci:
              type: snowflake
              account: ${{ secrets.SNOWFLAKE_ACCOUNT }}
              user: ${{ secrets.SNOWFLAKE_USER }}
              password: ${{ secrets.SNOWFLAKE_PASSWORD }}
              role: ${{ secrets.SNOWFLAKE_ROLE }}
              database: ${{ secrets.SNOWFLAKE_DATABASE }}
              warehouse: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
              schema: dbt_ci_pr_${{ github.event.number }}
              threads: 2
              client_session_keep_alive: false
              query_tag: dbt-ci-pr-${{ github.event.number }}
        EOF

    - name: Debug dbt connection
      run: dbt debug --profiles-dir ~/.dbt

    - name: Install dbt dependencies
      run: dbt deps --profiles-dir ~/.dbt

    - name: Lint SQL files
      run: sqlfluff lint models/ --dialect snowflake || true

    - name: Parse dbt project
      run: dbt parse --profiles-dir ~/.dbt

    - name: Check source freshness
      run: dbt source freshness --profiles-dir ~/.dbt || true

    - name: Run dbt models
      run: dbt run --profiles-dir ~/.dbt --target ci --full-refresh

    - name: Test dbt models
      run: dbt test --profiles-dir ~/.dbt --target ci --store-failures

    - name: Generate documentation
      run: dbt docs generate --profiles-dir ~/.dbt --target ci

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: dbt-ci-artifacts-pr-${{ github.event.number }}
        path: |
          target/manifest.json
          target/catalog.json
          target/run_results.json
          target/index.html
        retention-days: 7

    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const comment = `
          ## ðŸš€ dbt CI Results

          âœ… dbt models compiled and ran successfully
          âœ… All tests passed
          âœ… Documentation generated

          **CI Schema:** \`dbt_ci_pr_${{ github.event.number }}\`

          Great work! Your changes are ready for review.
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
